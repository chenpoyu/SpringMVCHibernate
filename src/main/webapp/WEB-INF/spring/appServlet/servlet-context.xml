<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		">

	<!-- 使Spring關注Annotation -->
	<context:annotation-config />

	<!-- 設定自動匹配aop設置 自動產生代理 -->
	<aop:aspectj-autoproxy />
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
		
    <!-- 讓Spring通過自動掃描來查詢和管理Bean -->
	<context:component-scan base-package="com.poyu" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.56.101:1521:orcl" />
		<property name="username" value="poyu" />
		<property name="password" value="test1234" />
	</bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.poyu.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="baseDaoHibernate" class="com.poyu.core.BaseDaoHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Generic Dao - can be used when doing standard CRUD Use Ehcache end -->
	<!-- 基本事務定義,使用transactionManager作事務管理,默認get*方法的事務為readonly,其餘方法按默認設定.
			 默認的設置請參考Spring文檔事務第一章. -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="com.poyu.core.BaseDaoException"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="com.poyu.core.BaseDaoException"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="com.poyu.core.BaseDaoException"/>			
		</tx:attributes>
	</tx:advice>

</beans>
